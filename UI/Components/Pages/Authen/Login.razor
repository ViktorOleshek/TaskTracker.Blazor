@page "/login"

@rendermode InteractiveServer

@using Domain.Models.Account.Login
@using Services.ExternalApi
@inject IApiFacade ApiFacade
@inject NavigationManager NavigationManager

<MudPaper Class="pa-4" MaxWidth="xs">
	<MudCardHeader Class="d-flex justify-center ">
		<MudText Typo=@Typo.h6>Login</MudText>
	</MudCardHeader>

	<MudForm Model=@loginModel Validation=@loginModelValidation.ValidateValue @ref=@loginForm>
		<MudCardContent>
			<MudTextField @bind-Value=@loginModel.Login For="@(() => loginModel.Login)" Label="Login"
						  Variant=@Variant.Outlined Margin=@Margin.Normal Required="true" />
			<MudTextField @bind-Value=@loginModel.Password For="@(() => loginModel.Password)" Label="Password"
						  Variant=@Variant.Outlined Margin=@Margin.Normal InputType=@InputType.Password Required="true" />
		</MudCardContent>

		<MudCardActions>
			<MudButton Type="Submit" Variant=@Variant.Filled Color=@Color.Primary
					   Class="ml-auto" ButtonType=@ButtonType.Button FullWidth="true"
					   OnClick=@HandleLogin Disabled=@isSubmitting>
				@if (isSubmitting)
				{
					<MudProgressCircular Size=@Size.Small Indeterminate="true" />
				}
				else
				{
					<text>Login</text>
				}
			</MudButton>
		</MudCardActions>

		@if (!string.IsNullOrEmpty(errorMessage))
		{
			<MudAlert Severity=@Severity.Error Dense="true" Elevation="0" Class="mt-4">@errorMessage</MudAlert>
		}
	</MudForm>
</MudPaper>