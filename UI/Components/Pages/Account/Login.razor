@page "/login"

@using Domain.Models.Account
@using Services.Abstraction
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@using MudBlazor

<MudPaper Class="pa-4" MaxWidth="xs">
	<MudCardHeader Class="d-flex justify-center ">
		<MudText Typo="Typo.h6">Login</MudText>
	</MudCardHeader>

	<MudForm Model="@loginModel" Validation="loginModelValidation.ValidateValue">
		<MudCardContent>
			<MudTextField @bind-Value="loginModel.Login" For="@(() => loginModel.Login)" Label="Login" Variant="Variant.Outlined" Margin="Margin.Normal" Required="true" />
			<MudTextField @bind-Value="loginModel.Password" For="@(() => loginModel.Password)" Label="Password" Variant="Variant.Outlined" Margin="Margin.Normal" InputType="InputType.Password" Required="true" />
		</MudCardContent>

		<MudCardActions>
			<MudButton Type="Submit" Variant="Variant.Filled" Color="Color.Primary"
					   Class="ml-auto" ButtonType="ButtonType.Button" FullWidth="true"
					   OnClick="HandleLogin" Disabled="isSubmitting">
				@if (isSubmitting)
				{
					<MudProgressCircular Size="Size.Small" Indeterminate="true" />
				}
				else
				{
					<text>Login</text>
				}
			</MudButton>
		</MudCardActions>

		@if (!string.IsNullOrEmpty(errorMessage))
		{
			<MudAlert Severity="Severity.Error" Dense="true" Elevation="0" Class="mt-4">@errorMessage</MudAlert>
		}
	</MudForm>
</MudPaper>

@code {
	private LoginModel loginModel = new LoginModel();
	private LoginModelValidation loginModelValidation = new LoginModelValidation();
	private string? errorMessage;
	private bool isSubmitting = false;

	private async Task HandleLogin()
	{
		isSubmitting = true;
		errorMessage = null;

		var response = await AuthService.LoginAsync(loginModel);

		if (response.IsSuccessStatusCode && response.Content is not null)
		{
			var loginResponse = response.Content;
			Console.WriteLine($"Successful login! Token: {loginResponse.Token}");
			NavigationManager.NavigateTo("/dashboard");
		}
		else
		{
			errorMessage = "Invalid data, please try again.";
		}

		isSubmitting = false;
	}
}
